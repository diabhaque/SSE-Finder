{"version":3,"sources":["home/Home.tsx","client/requests.ts","client/utils.ts","components/CaseRecordsPage.tsx","components/AddCasePage.tsx","components/FindSsePage.tsx","components/AddEventDataModal.tsx","components/AddExistingEventDataModal.tsx","components/CaseData.tsx","components/EventData.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Layout","Content","Sider","Footer","Title","Typography","MyMenu","Menu","MyLayout","Home","children","activeNav","useLocation","pathname","split","style","height","mode","theme","selectedKeys","textAlign","margin","level","color","Item","to","className","padding","overflowY","getEvents","url","URL","request","Request","toString","ok","fetch","then","r","json","catch","err","console","log","getCase","caseID","postCase","method","headers","body","JSON","stringify","patchEventToCase","case_id","patch","Search","Input","CaseRecordsPage","history","useHistory","useState","case_number","person_name","identify_document_number","date_of_birth","date_of_onset_of_symptoms","date_of_confirmation_of_infection_by_testing","caseData","setCaseData","useEffect","getCases","cases","message","error","placeholder","onSearch","caseNumber","caseNumberInt","parseInt","fetchedCase","push","state","marginBottom","onRow","record","rowIndex","onClick","event","rowKey","columns","title","dataIndex","key","dataSource","AddCasePage","loading","setLoading","Form","useForm","form","onFinish","values","a","formData","surname","otherNames","idNumber","dateOfBirth","format","dateOfOnset","dateOfCaseConfirmed","newCase","layout","name","onFinishFailed","errorInfo","scrollToFirstError","label","validateTrigger","rules","required","getFieldValue","validator","_","value","moment","Promise","reject","Error","resolve","defaultPickerValue","type","htmlType","FindSsePage","sseData","setSseData","from","setTimeout","fetchedEvents","fetchedSseData","filter","fetchedEvent","length","Date","date_of_the_event","warning","id","AddEventDataModal","visible","onCreate","onCancel","disabledDate","formRef","createRef","okText","cancelText","onOk","validateFields","resetFields","info","ref","initialValues","modifier","display","locationString","encodeURI","getLocation","current","fetchedLocation","setFieldsValue","address","addressEN","x","y","marginLeft","Option","Select","AddExistingEventDataModal","allEvents","alreadyAddedEvents","options","includes","map","venue_name","venue_location","onChange","eventID","CaseData","props","location","setVisible","existingVisible","setExistingVisible","eventsData","setEventsData","allEventsData","setAllEventsData","buttonDisable","setButtonDisable","events","subtract","endOf","render","text","isBetween","add","postEvent","venueName","venueLocation","address_of_the_venue_location","hk1980_grid_coordinates_of_the_venue_location","dateOfEvent","description_of_the_event","descriptions","newEvent","newEventID","patchedCase","patchedEvent","size","bordered","disabled","EventData","eventData","setEventData","getEvent","HomeNavigation","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.408a65cb.chunk.js","sourcesContent":["import { Layout, Menu, Typography } from \"antd\";\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./home.css\";\n\nconst { Header, Content, Sider, Footer } = Layout;\nconst { Title } = Typography;\n\nconst MyMenu = Menu as any; // Ugly, but will try fixing later. Maybe.\nconst MyLayout = Layout as any;\ninterface HomeProps {\n    children: React.ReactNode;\n}\n\nexport const Home: React.FC<HomeProps> = ({ children }) => {\n    const location = useLocation();\n    const activeNav = location.pathname.split(\"/\")[1] || \"case-records\";\n\n    return (\n        <MyLayout style={{ height: \"100vh\" }}>\n            <Sider>\n                <MyMenu\n                    mode=\"inline\"\n                    theme=\"dark\"\n                    selectedKeys={[activeNav]}\n                >\n                    <div\n                        style={{\n                            textAlign: \"center\",\n                            margin: \"16px\",\n                            height: \"32px\"\n                        }}\n                    >\n                        <Title level={3} style={{ color: \"white\" }}>\n                            SSE Finder\n                        </Title>\n                    </div>\n\n                    <MyMenu.Item key=\"case-records\">\n                        <Link to=\"/\">Case Records</Link>\n                    </MyMenu.Item>\n                    <MyMenu.Item key=\"find-sse\">\n                        <Link to=\"/find-sse\">Find SSEs</Link>\n                    </MyMenu.Item>\n                    <MyMenu.Item key=\"add-case\">\n                        <Link to=\"/add-case\">Add Case</Link>\n                    </MyMenu.Item>\n                </MyMenu>\n            </Sider>\n            <MyLayout>\n                <Header\n                    className=\"site-layout-sub-header-background\"\n                    style={{ padding: 0 }}\n                />\n                <Content style={{ margin: \"24px 16px 0\" }}>\n                    <div\n                        className=\"site-layout-background\"\n                        style={{ padding: 24, height: '100%', overflowY: 'auto' }}\n                    >\n                        {children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: \"center\" }}></Footer>\n            </MyLayout>\n        </MyLayout>\n    );\n};\n","import { Case } from \"../types/caseTypes_trial\";\nimport { getHostName } from \"./utils\";\n\nexport const getCases = (): Promise<Case[] | null> => {\n    const url = new URL(`https://${getHostName()}/api/cases`);\n    const request = new Request(url.toString());\n\n    let ok = false;\n    return fetch(request)\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return r as Case[];\n            } else {\n                return null;\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            return null;\n        });\n};\n\nexport const getEvents = (): Promise<any[] | null> => {\n    const url = new URL(`http://${getHostName()}/api/events`);\n    const request = new Request(url.toString());\n\n    let ok = false;\n    return fetch(request)\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return r as any[];\n            } else {\n                return null;\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            return null;\n        });\n};\n\nexport const getEvent = (eventID: string): Promise<any | null> => {\n    const url = new URL(`http://${getHostName()}/api/events/${eventID}`);\n    const request = new Request(url.toString());\n\n    let ok = false;\n    return fetch(request)\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return r as any;\n            } else {\n                return null;\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            return null;\n        });\n};\n\nexport const getCase = (caseID: String): Promise<Case | null> => {\n    const url = new URL(`https://${getHostName()}/api/cases/${caseID}`);\n    const request = new Request(url.toString());\n\n    let ok = false;\n    return fetch(request)\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return r as Case;\n            } else {\n                return null;\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            return null;\n        });\n};\n\nexport const postCase = (postCase: Case): Promise<Case | null> => {\n    const url = new URL(`http://${getHostName()}/api/cases/`);\n\n    let ok = false;\n    return fetch(url.toString(), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(postCase)\n    })\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return r as Case;\n            } else {\n                return null;\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            return null;\n        });\n};\n\nexport const getLocation = (\n    locationString: string\n): Promise<Array<Object> | null> => {\n    const url = new URL(\n        `https://geodata.gov.hk/gs/api/v1.0.0/locationSearch?q=${encodeURI(\n            locationString\n        )}`\n    );\n\n    let ok = false;\n    return (\n        fetch(url.toString(), {\n            method: \"GET\"\n        })\n            .then((r) => {\n                ok = r.ok;\n                return r.json();\n            })\n            //From document: we can assume to use the first result as the location\n            .then((r) => {\n                if (ok) {\n                    return r[0] as Array<Object>;\n                } else {\n                    return null;\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                return null;\n            })\n    );\n};\n\nexport const postEvent = (postEvent: any): Promise<any | null> => {\n    const url = new URL(`http://${getHostName()}/api/events/`);\n\n    let ok = false;\n    return fetch(url.toString(), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(postEvent)\n    })\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return r as any;\n            } else {\n                return null;\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            return null;\n        });\n};\n\nexport const patchEventToCase = (\n    case_id: any,\n    patch: any\n): Promise<any | null> => {\n    const url = new URL(`http://${getHostName()}/api/cases/${case_id}/`);\n\n    let ok = false;\n    return fetch(url.toString(), {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(patch)\n    })\n        .then((r) => {\n            ok = r.ok;\n            return r.json();\n        })\n        .then((r) => {\n            if (ok) {\n                return r as any;\n            } else {\n                return null;\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            return null;\n        });\n};\n","export const getHostName = (): string => {\n    return \"sse-finder-group-k.herokuapp.com\"\n};","import { Input, Table, message } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { Case } from \"../types/caseTypes_trial\";\nimport React, { useState, useEffect } from \"react\";\nimport { getCases, getCase } from \"../client/requests\";\nconst { Search } = Input;\n\nexport const CaseRecordsPage = () => {\n    const history = useHistory();\n\n    const [caseData, setCaseData] = useState<any>([\n        {\n            case_number: null,\n            person_name: null,\n            identify_document_number: null,\n            date_of_birth: null,\n            date_of_onset_of_symptoms: null,\n            date_of_confirmation_of_infection_by_testing: null\n        }\n    ]);\n\n    useEffect(() => {\n        getCases().then((cases: Case[] | null) => {\n            if (!cases) {\n                message.error(\"Cannot retrieve cases!\");\n            }\n            setCaseData(cases);\n        });\n    }, []);\n\n    const onSearch = (caseNumber: string) => {\n        const caseNumberInt = parseInt(caseNumber);\n        if (!caseNumberInt) {\n            message.error(\"Please enter a number!\");\n            return;\n        }\n        getCase(caseNumberInt.toString()).then((fetchedCase: Case | null) => {\n            // Catch query errors (Since requests.ts return null if error, need to catch on .then)\n            console.log(fetchedCase);\n            if (!fetchedCase) {\n                message.error(\"Case number not found!\");\n                return;\n            }\n            history.push({\n                pathname: `/case-data/${caseNumberInt.toString()}`,\n                state: fetchedCase\n            });\n        });\n    };\n\n    const columns = [\n        {\n            title: \"Case Number\",\n            dataIndex: \"case_number\",\n            key: \"case_number\"\n        },\n        {\n            title: \"Person Name\",\n            dataIndex: \"person_name\",\n            key: \"person_name\"\n        },\n        {\n            title: \"Identity Document Number\",\n            dataIndex: \"identify_document_number\",\n            key: \"identify_document_number\"\n        },\n        {\n            title: \"Date Of Birth\",\n            dataIndex: \"date_of_birth\",\n            key: \"date_of_birth\"\n        },\n        {\n            title: \"Date Of Onset\",\n            dataIndex: \"date_of_onset_of_symptoms\",\n            key: \"date_of_onset_of_symptoms\"\n        },\n        {\n            title: \"Date Of Case Confirmed\",\n            dataIndex: \"date_of_confirmation_of_infection_by_testing\",\n            key: \"date_of_confirmation_of_infection_by_testing\"\n        }\n    ];\n\n    return (\n        <div>\n            <Search\n                placeholder=\"Enter case number\"\n                onSearch={onSearch}\n                style={{ marginBottom: 16 }}\n            />\n            <Table\n                onRow={(record, rowIndex) => {\n                    return {\n                        onClick: (event) => {\n                            history.push(`/case-data/${record.case_number}`);\n                        }\n                    };\n                }}\n                rowKey=\"case_number\"\n                columns={columns}\n                dataSource={caseData}\n            />\n        </div>\n    );\n};\n","import { useState } from \"react\";\nimport { /*Redirect,*/ useHistory } from \"react-router-dom\";\nimport { Case } from \"../types/caseTypes_trial\";\nimport { Form, Input, Button, Spin, DatePicker, message } from \"antd\";\nimport { postCase } from \"../client/requests\";\nimport moment from \"moment\";\n\nexport const AddCasePage = () => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n    //const [error, setError] = useState(false);\n    const [form] = Form.useForm();\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n        const formData = {\n            case_number: null,\n            person_name: values.surname + \", \" + values.otherNames,\n            identify_document_number: values.idNumber,\n            date_of_birth: values.dateOfBirth.format(\"YYYY-MM-DD\"),\n            date_of_onset_of_symptoms: values.dateOfOnset.format(\"YYYY-MM-DD\"),\n            date_of_confirmation_of_infection_by_testing: values.dateOfCaseConfirmed.format(\n                \"YYYY-MM-DD\"\n            )\n        };\n        postCase(formData).then((newCase: Case | null) => {\n            if (!newCase) {\n                message.error(\"Cannot add the case to server!\");\n                setLoading(false);\n                return;\n            }\n            console.log(newCase);\n            setLoading(false);\n            if (newCase.case_number) {\n                history.push(`/case-data/${newCase?.case_number}`);\n            }\n        });\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    return (\n        <div style={{ padding: \"5vh 10vw\" }}>\n            <Form\n                // {...formItemLayout}\n                layout=\"vertical\"\n                form={form}\n                name=\"Add Case\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                scrollToFirstError\n            >\n                <Form.Item\n                    name=\"surname\"\n                    label=\"Surname\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input Person's Surname\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"otherNames\"\n                    label=\"Other Names\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input Person's Other Names\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"idNumber\"\n                    label=\"Identity Document Number\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message:\n                                \"Please input the Person's Identity Document Number\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"dateOfBirth\"\n                    label=\"Date Of Birth\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select Date of Birth\"\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(_, value) {\n                                if (!value) {\n                                    return Promise.resolve();\n                                }\n\n                                if (\n                                    moment(value) >\n                                        moment(getFieldValue(\"dateOfOnset\")) ||\n                                    moment(value) >\n                                        moment(getFieldValue(\"dateOfOnset\"))\n                                ) {\n                                    return Promise.reject(\n                                        new Error(\n                                            \"Date of Birth cannot be later than Date of Onset and Date of Case Confirmed!\"\n                                        )\n                                    );\n                                }\n\n                                return Promise.resolve();\n                            }\n                        })\n                    ]}\n                >\n                    <DatePicker defaultPickerValue={moment(\"1990-01-01\")} />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"dateOfOnset\"\n                    label=\"Date Of Onset\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select Date of Onset\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"dateOfCaseConfirmed\"\n                    label=\"Date Of Case Confirmed\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select Date of Case Confirmed\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item>\n                    {loading ? (\n                        <Spin />\n                    ) : (\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Add Case\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, DatePicker, Form, Spin, Table, message } from \"antd\";\nimport { getEvents } from \"../client/requests\";\n\nexport const FindSsePage = () => {\n    const history = useHistory();\n\n    const [loading, setLoading] = useState(false);\n    const [sseData, setSseData] = useState<any>([]);\n    //const [allEventsData, setAllEventsData] = useState<any | null>([]);\n    const [form] = Form.useForm();\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n        const formData = {\n            to: values.to.format(\"YYYY-MM-DD\"),\n            from: values.from.format(\"YYYY-MM-DD\")\n        };\n\n        await new Promise((r) => setTimeout(r, 1000));\n        // get request to the backend.\n\n        getEvents().then((fetchedEvents: any | null) => {\n            //setAllEventsData(fetchedEvents);\n            if (fetchedEvents) {\n                const fetchedSseData = fetchedEvents.filter(\n                    (fetchedEvent: any) => {\n                        return (\n                            fetchedEvent.cases.length >= 6 &&\n                            new Date(fetchedEvent.date_of_the_event) <=\n                                new Date(formData.to) &&\n                            new Date(fetchedEvent.date_of_the_event) >=\n                                new Date(formData.from)\n                        );\n                    }\n                );\n                console.log(fetchedSseData);\n                if (fetchedSseData.length === 0) {\n                    message.warning(\"No SSE found within the date range!\");\n                }\n                setSseData(fetchedSseData);\n                setLoading(false);\n            } else {\n                message.error(\"Cannot retrieve events!\");\n            }\n        });\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    const columns = [\n        {\n            title: \"ID\",\n            dataIndex: \"id\",\n            key: \"id\"\n        },\n        {\n            title: \"Venue Name\",\n            dataIndex: \"venue_name\",\n            key: \"venue_name\"\n        },\n        {\n            title: \"Venue Location\",\n            dataIndex: \"venue_location\",\n            key: \"venue_location\"\n        },\n        {\n            title: \"Address\",\n            dataIndex: \"address_of_the_venue_location\",\n            key: \"address_of_the_venue_location\"\n        },\n        {\n            title: \"HK1980 Coordinate\",\n            dataIndex: \"hk1980_grid_coordinates_of_the_venue_location\",\n            key: \"hk1980_grid_coordinates_of_the_venue_location\"\n        },\n        {\n            title: \"Date of Event\",\n            dataIndex: \"date_of_the_event\",\n            key: \"date_of_the_event\"\n        }\n    ];\n\n    return (\n        <div>\n            <Form\n                layout=\"inline\"\n                form={form}\n                name=\"Date Range\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                scrollToFirstError\n            >\n                <Form.Item\n                    name=\"from\"\n                    label=\"From\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select a start date\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"to\"\n                    label=\"To\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select an end date\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item>\n                    {loading ? (\n                        <Spin />\n                    ) : (\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Find SSEs\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <br />\n            <Table\n                onRow={(record, rowIndex) => {\n                    return {\n                        onClick: (event) => {\n                            history.push(`/event-data/${record.id}`);\n                        }\n                    };\n                }}\n                columns={columns}\n                dataSource={sseData}\n                rowKey=\"id\"\n            />\n        </div>\n    );\n};\n","import { Modal, Form, Input, DatePicker, message, Button } from \"antd\";\nimport { createRef } from \"react\";\nimport { getLocation } from \"../client/requests\";\n\ninterface AddEventDataModalProps {\n    visible: boolean;\n    onCreate: (values: Location) => void;\n    onCancel: () => void;\n    disabledDate: (current: any) => boolean;\n}\n\nexport const AddEventDataModal = ({\n    visible,\n    onCreate,\n    onCancel,\n    disabledDate\n}: AddEventDataModalProps) => {\n    const [form] = Form.useForm();\n    const formRef: any = createRef();\n\n    //Leaving all as any for now, save time\n    const getAddress = () => {\n        const venueLocation = formRef.current.getFieldValue(\"venueLocation\");\n        getLocation(venueLocation).then((fetchedLocation: any) => {\n            if (!fetchedLocation) {\n                message.error(\"Cannot get location from GeoData!\");\n                return;\n            }\n            formRef.current.setFieldsValue({\n                address: fetchedLocation.addressEN,\n                x: fetchedLocation.x,\n                y: fetchedLocation.y\n            });\n        });\n    };\n\n    return (\n        <Modal\n            visible={visible}\n            title=\"Add a new Location\"\n            okText=\"Add\"\n            cancelText=\"Cancel\"\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        onCreate(values);\n                    })\n                    .catch((info) => {\n                        console.log(\"Validate Failed:\", info);\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                ref={formRef}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: \"public\" }}\n            >\n                <Form.Item\n                    name=\"venueName\"\n                    label=\"Venue Name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the name of the Venue!\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"venueLocation\"\n                    label=\"Venue Location\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the Location of the Venue!\"\n                        }\n                    ]}\n                >\n                    <div style={{ display: \"flex\" }}>\n                        <Input />\n                        <Button\n                            onClick={getAddress}\n                            type=\"primary\"\n                            style={{ marginLeft: 16 }}\n                        >\n                            Get Address\n                        </Button>\n                    </div>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"address\"\n                    label=\"Address\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the Venue Address\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"x\"\n                    label=\"HK1980 X Coordinate\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the X Coordinate\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"y\"\n                    label=\"HK1980 Y Coordinate\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the Y Coordinate\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"dateOfEvent\"\n                    label=\"Date Of Event\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select Date of the Event\"\n                        }\n                    ]}\n                >\n                    <DatePicker disabledDate={disabledDate} />\n                </Form.Item>\n                <Form.Item\n                    name=\"descriptions\"\n                    label=\"Descriptions\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input a description of the Event\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n};\n","import { Modal, Form, /*Input,*/ Select } from \"antd\";\nimport React, { createRef } from \"react\";\n\ninterface AddExistingEventDataModalProps {\n    visible: boolean;\n    onCreate: (values: Location) => void;\n    onCancel: () => void;\n    allEvents: any[];\n    alreadyAddedEvents: any[];\n}\n\nconst { Option } = Select;\n\nexport const AddExistingEventDataModal = ({\n    visible,\n    onCreate,\n    onCancel,\n    allEvents,\n    alreadyAddedEvents\n}: AddExistingEventDataModalProps) => {\n    const [form] = Form.useForm();\n    const formRef: any = createRef();\n\n    const remainingEvents = alreadyAddedEvents\n        ? allEvents.filter((event: any) => {\n              return !alreadyAddedEvents.includes(event.id);\n          })\n        : [];\n\n    const options = remainingEvents.map((event) => (\n        <Option key={event.id} value={event.id}>\n            {`${event.id}, ${event.venue_name}, ${event.venue_location}, ${event.date_of_the_event}`}\n        </Option>\n    ));\n\n    return (\n        <Modal\n            visible={visible}\n            title=\"Add an existing Event that is between 14 days before Day of Onset of Symptoms and Day of Confirmation of Infection\"\n            okText=\"Add\"\n            cancelText=\"Cancel\"\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        onCreate(values);\n                    })\n                    .catch((info) => {\n                        console.log(\"Validate Failed:\", info);\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                ref={formRef}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: \"public\" }}\n            >\n                <Form.Item\n                    name=\"eventID\"\n                    label=\"Select Event\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select an Existing Event!\"\n                        }\n                    ]}\n                >\n                    <Select\n                        onChange={(value) => {\n                            form.setFieldsValue({ eventID: value });\n                        }}\n                    >\n                        {options}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n};\n","import { useLocation, useHistory } from \"react-router-dom\";\nimport { Descriptions, Table, Button, Space, message, Tag } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { Case } from \"../types/caseTypes_trial\";\nimport { AddEventDataModal } from \"./AddEventDataModal\";\nimport { AddExistingEventDataModal } from \"./AddExistingEventDataModal\";\nimport {\n    getCase,\n    getEvents,\n    patchEventToCase,\n    postEvent\n} from \"../client/requests\";\nimport moment from \"moment\";\n\n// Create an add existing event data modal which queries and gets old events, then allows user to pick and submit from one of them.\n\nexport const CaseData = (props: any) => {\n    const history = useHistory();\n    const location = useLocation();\n    const caseID = location.pathname.split(\"/\")[2];\n    // should be loaded with useeffect and set to state.\n    const [visible, setVisible] = useState(false);\n    const [existingVisible, setExistingVisible] = useState(false);\n    const [eventsData, setEventsData] = useState<any | null>([]);\n    const [allEventsData, setAllEventsData] = useState<any | null>([]);\n    const [buttonDisable, setButtonDisable] = useState(true);\n\n    const [caseData, setCaseData] = useState<Case | null>({\n        case_number: null,\n        person_name: null,\n        identify_document_number: null,\n        date_of_birth: null,\n        date_of_onset_of_symptoms: null,\n        date_of_confirmation_of_infection_by_testing: null,\n        events: []\n    });\n\n    useEffect(() => {\n        getCase(caseID).then((fetchedCase: Case | null) => {\n            if (!fetchedCase) {\n                message.error(\"Cannot find the case!\");\n                return;\n            }\n            setCaseData(fetchedCase);\n            console.log(fetchedCase?.events);\n            setButtonDisable(false);\n            getEvents().then((fetchedEvents: any | null) => {\n                if (!fetchedEvents) {\n                    message.error(\"Cannot find the events of the case!\");\n                    return;\n                }\n                setAllEventsData(\n                    fetchedEvents.filter((fetchedEvent: any) => {\n                        return (\n                            moment(fetchedEvent.date_of_the_event) >=\n                                moment(\n                                    fetchedCase?.date_of_onset_of_symptoms\n                                ).subtract(14, \"days\") &&\n                            moment(fetchedEvent.date_of_the_event) <\n                                moment(\n                                    fetchedCase?.date_of_confirmation_of_infection_by_testing\n                                ).endOf(\"day\")\n                        );\n                    })\n                );\n                setEventsData(\n                    fetchedEvents.filter((fetchedEvent: any) => {\n                        return fetchedCase?.events.includes(fetchedEvent.id);\n                    })\n                );\n            });\n        });\n    }, [caseID, location]);\n\n    const onCreate = (values: any) => {\n        console.log(\"Received values of form: \", values);\n        const formData = {\n            venue_name: values.venueName,\n            venue_location: values.venueLocation,\n            address_of_the_venue_location: values.address,\n            hk1980_grid_coordinates_of_the_venue_location: `(${values.x}, ${values.y})`,\n            date_of_the_event: values.dateOfEvent.format(\"YYYY-MM-DD\"),\n            description_of_the_event: values.descriptions\n        };\n\n        postEvent(formData).then((newEvent: any | null) => {\n            if (!newEvent) {\n                message.error(\"Cannot post the event!\");\n                setVisible(false);\n                return;\n            }\n            console.log(newEvent);\n            // setLoading(false);\n            const newEventID = newEvent.id;\n            if (newEventID) {\n                patchEventToCase(caseData?.case_number, {\n                    events: [...caseData?.events, newEventID]\n                }).then((patchedCase: any | null) => {\n                    if (!patchedCase) {\n                        message.error(\"Cannot patch event to the case!\");\n                        setVisible(false);\n                        return;\n                    }\n                    console.log(newEvent);\n                    setEventsData([...eventsData, newEvent]);\n                });\n            }\n        });\n        setVisible(false);\n    };\n\n    const columns = [\n        {\n            title: \"Venue Name\",\n            dataIndex: \"venue_name\",\n            key: \"venue_name\"\n        },\n        {\n            title: \"Venue Location\",\n            dataIndex: \"venue_location\",\n            key: \"venue_location\"\n        },\n        {\n            title: \"Address\",\n            dataIndex: \"address_of_the_venue_location\",\n            key: \"address_of_the_venue_location\"\n        },\n        {\n            title: \"HK1980 Coordinate\",\n            dataIndex: \"hk1980_grid_coordinates_of_the_venue_location\",\n            key: \"hk1980_grid_coordinates_of_the_venue_location\"\n        },\n        {\n            title: \"Date of Event\",\n            dataIndex: \"date_of_the_event\",\n            key: \"date_of_the_event\"\n        },\n        {\n            title: \"Associations\",\n            key: \"associations\",\n            render: (text: any, record: any) => (\n                <>\n                    {moment(record.date_of_the_event).isBetween(\n                        moment(caseData?.date_of_onset_of_symptoms).subtract(\n                            3,\n                            \"days\"\n                        ),\n                        caseData?.date_of_confirmation_of_infection_by_testing,\n                        \"day\",\n                        \"[]\"\n                    ) ? (\n                        <Tag color=\"volcano\">Possible Infector</Tag>\n                    ) : (\n                        <></>\n                    )}\n                    {moment(record.date_of_the_event).isBetween(\n                        moment(caseData?.date_of_onset_of_symptoms).add(\n                            2,\n                            \"days\"\n                        ),\n                        moment(caseData?.date_of_onset_of_symptoms).add(\n                            14,\n                            \"days\"\n                        ),\n                        \"day\",\n                        \"[]\"\n                    ) ? (\n                        <Tag color=\"lime\">Possibly Infected</Tag>\n                    ) : (\n                        <></>\n                    )}\n                </>\n            )\n        }\n    ];\n\n    const handleAdd = () => {\n        setVisible(true);\n    };\n\n    const handleExistingAdd = () => {\n        setExistingVisible(true);\n    };\n\n    const onExistingCreate = (values: any) => {\n        // performPatchRequest\n        // filter from all events by id and add\n        const eventID = values.eventID;\n        console.log(eventID);\n        patchEventToCase(caseData?.case_number, {\n            events: [...caseData?.events, eventID]\n        }).then((patchedCase: any | null) => {\n            if (!patchedCase) {\n                message.error(\"Cannot patch event to the case!\");\n                setExistingVisible(false);\n                return;\n            }\n            const patchedEvent = allEventsData.filter((event: any) => {\n                return eventID === event.id;\n            });\n            console.log(patchedEvent[0]);\n            setEventsData([...eventsData, patchedEvent[0]]);\n        });\n        setExistingVisible(false);\n    };\n\n    const disabledDate = (current: any) => {\n        return (\n            current &&\n            (current <\n                moment(caseData?.date_of_onset_of_symptoms).subtract(\n                    14,\n                    \"days\"\n                ) ||\n                current >\n                    moment(\n                        caseData?.date_of_confirmation_of_infection_by_testing\n                    ).endOf(\"day\"))\n        );\n    };\n\n    return (\n        <>\n            <AddEventDataModal\n                visible={visible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setVisible(false);\n                }}\n                disabledDate={disabledDate}\n            />\n            <AddExistingEventDataModal\n                visible={existingVisible}\n                onCreate={onExistingCreate}\n                onCancel={() => {\n                    setExistingVisible(false);\n                }}\n                allEvents={allEventsData ? allEventsData : []}\n                alreadyAddedEvents={caseData ? caseData?.events : []}\n            />\n            <br />\n            <Descriptions\n                title=\"Case Details\"\n                layout=\"horizontal\"\n                size=\"small\"\n                bordered\n            >\n                <Descriptions.Item label=\"Case Number\">\n                    {caseData?.case_number}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Person Name\">\n                    {caseData?.person_name}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"ID Document Number\">\n                    {caseData?.identify_document_number}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Date of Birth\">\n                    {caseData?.date_of_birth}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Date of Onset\">\n                    {caseData?.date_of_onset_of_symptoms}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Date of Case Confirmed\">\n                    {caseData?.date_of_confirmation_of_infection_by_testing}\n                </Descriptions.Item>\n            </Descriptions>\n            <br />\n            <div className=\"ant-descriptions-header\">\n                <div className=\"ant-descriptions-title\">\n                    Social Events attended\n                </div>\n                <Space>\n                    <Button\n                        onClick={handleAdd}\n                        type=\"primary\"\n                        style={{\n                            marginBottom: 16\n                        }}\n                        disabled={buttonDisable}\n                    >\n                        Add New Event\n                    </Button>\n\n                    <Button\n                        onClick={handleExistingAdd}\n                        type=\"primary\"\n                        style={{\n                            marginBottom: 16\n                        }}\n                        disabled={buttonDisable}\n                    >\n                        Add Existing Event\n                    </Button>\n                </Space>\n            </div>\n            <Table\n                onRow={(record, rowIndex) => {\n                    return {\n                        onClick: (event) => {\n                            history.push(`/event-data/${record.id}`);\n                        }\n                    };\n                }}\n                columns={columns}\n                dataSource={eventsData}\n                rowKey={\"id\"}\n            />\n        </>\n    );\n};\n","import { useLocation, useHistory } from \"react-router-dom\";\nimport { Descriptions, Table, message, Tag } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { getEvent } from \"../client/requests\";\nimport moment from \"moment\";\n\nexport const EventData = (props: any) => {\n    const history = useHistory();\n    const location = useLocation();\n    const eventID = location.pathname.split(\"/\")[2];\n\n    const [eventData, setEventData] = useState<any>({\n        id: null,\n        date_of_the_event: null,\n        venue_name: null,\n        venue_location: null,\n        address_of_the_venue_location: null,\n        hk1980_grid_coordinates_of_the_venue_location: null,\n        description_of_the_event: null,\n        cases: []\n    });\n\n    useEffect(() => {\n        getEvent(eventID).then((fetchedEvent: any) => {\n            if (!fetchedEvent) {\n                message.error(\"Cannot find the event!\");\n                return;\n            }\n            setEventData(fetchedEvent);\n            console.log(fetchedEvent);\n        });\n    }, [eventID, location]);\n    const columns = [\n        {\n            title: \"Case Number\",\n            dataIndex: \"case_number\",\n            key: \"case_number\"\n        },\n        {\n            title: \"Person Name\",\n            dataIndex: \"person_name\",\n            key: \"person_name\"\n        },\n        {\n            title: \"Identity Document Number\",\n            dataIndex: \"identify_document_number\",\n            key: \"identify_document_number\"\n        },\n        {\n            title: \"Date Of Birth\",\n            dataIndex: \"date_of_birth\",\n            key: \"date_of_birth\"\n        },\n        {\n            title: \"Date Of Onset\",\n            dataIndex: \"date_of_onset_of_symptoms\",\n            key: \"date_of_onset_of_symptoms\"\n        },\n        {\n            title: \"Date Of Case Confirmed\",\n            dataIndex: \"date_of_confirmation_of_infection_by_testing\",\n            key: \"date_of_confirmation_of_infection_by_testing\"\n        },\n        {\n            title: \"Associations\",\n            key: \"associations\",\n            render: (text: any, record: any) => (\n                <>\n                    {moment(eventData.date_of_the_event).isBetween(\n                        moment(record.date_of_onset_of_symptoms).subtract(\n                            3,\n                            \"days\"\n                        ),\n                        record.date_of_confirmation_of_infection_by_testing,\n                        \"day\",\n                        \"[]\"\n                    ) ? (\n                        <Tag color=\"volcano\">Possible Infector</Tag>\n                    ) : (\n                        <></>\n                    )}\n                    {moment(eventData.date_of_the_event).isBetween(\n                        moment(record.date_of_onset_of_symptoms).add(2, \"days\"),\n                        moment(record.date_of_onset_of_symptoms).add(\n                            14,\n                            \"days\"\n                        ),\n                        \"day\",\n                        \"[]\"\n                    ) ? (\n                        <Tag color=\"lime\">Possibly Infected</Tag>\n                    ) : (\n                        <></>\n                    )}\n                </>\n            )\n        }\n    ];\n\n    return (\n        <>\n            <br />\n            <Descriptions\n                title=\"Event Details\"\n                layout=\"horizontal\"\n                size=\"small\"\n                bordered\n            >\n                <Descriptions.Item label=\"Event ID\">\n                    {eventData?.id}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Date of the Event\">\n                    {eventData?.date_of_the_event}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Venue Name\">\n                    {eventData?.venue_name}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Venue Location\">\n                    {eventData?.venue_location}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Address\">\n                    {eventData?.address_of_the_venue_location}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"HK1980 Coordinates\">\n                    {eventData?.hk1980_grid_coordinates_of_the_venue_location}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Is Potential SSE?\">\n                    {eventData?.cases.length >= 6 ? \"Yes\" : \"No\"}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Descriptions\">\n                    {eventData?.description_of_the_event}\n                </Descriptions.Item>\n            </Descriptions>\n            <br />\n            <div className=\"ant-descriptions-header\">\n                <div className=\"ant-descriptions-title\">Cases associated</div>\n            </div>\n            <Table\n                onRow={(record, rowIndex) => {\n                    return {\n                        onClick: (event) => {\n                            history.push(`/case-data/${record.case_number}`);\n                        }\n                    };\n                }}\n                dataSource={eventData?.cases}\n                columns={columns}\n                rowKey={\"case_number\"}\n            />\n        </>\n    );\n};\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./home/Home\";\nimport { CaseRecordsPage } from \"./components/CaseRecordsPage\";\nimport { AddCasePage } from \"./components/AddCasePage\";\nimport { FindSsePage } from \"./components/FindSsePage\";\nimport { CaseData } from \"./components/CaseData\";\nimport { EventData } from \"./components/EventData\";\n\nconst HomeNavigation = () => {\n    return (\n        <Home>\n            <Switch>\n                <Route exact path=\"/\">\n                    <CaseRecordsPage />\n                </Route>\n                <Route exact path=\"/find-sse\">\n                    <FindSsePage />\n                </Route>\n                <Route exact path=\"/add-case\">\n                    <AddCasePage />\n                </Route>\n                <Route exact path=\"/case-data/:id\">\n                    <CaseData />\n                </Route>\n                <Route exact path=\"/event-data/:id\">\n                    <EventData />\n                </Route>\n            </Switch>\n        </Home>\n    );\n};\n\nfunction App() {\n    return (\n        <div className=\"App\" style={{ height: \"100vh\" }}>\n            <Router>\n                <Switch>\n                    <Route path=\"/\">\n                        <HomeNavigation />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}