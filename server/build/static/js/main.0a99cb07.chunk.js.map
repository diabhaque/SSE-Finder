{"version":3,"sources":["home/Home.tsx","client/requests.ts","client/utils.ts","components/CaseRecordsPage.tsx","components/AddCasePage.tsx","components/FindSsePage.tsx","components/AddEventDataModal.tsx","components/CaseData.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Layout","Content","Sider","Footer","Title","Typography","MyMenu","Menu","MyLayout","Home","children","activeNav","useLocation","pathname","split","style","height","mode","theme","selectedKeys","textAlign","margin","level","color","Item","to","className","padding","overflowY","postCase","url","URL","fetch","toString","method","headers","body","JSON","stringify","then","r","json","catch","err","console","log","response","Search","Input","CaseRecordsPage","history","useHistory","useState","case_number","person_name","identify_document_number","date_of_birth","date_of_onset_of_symptoms","date_of_confirmation_of_infection_by_testing","caseData","setCaseData","useEffect","request","Request","getCases","cases","placeholder","onSearch","caseNumber","push","rowKey","columns","title","dataIndex","key","dataSource","AddCasePage","loading","setLoading","Form","useForm","form","onFinish","values","a","formData","surname","otherNames","idNumber","dateOfBirth","format","dateOfOnset","dateOfCaseConfirmed","newCase","layout","name","onFinishFailed","errorInfo","scrollToFirstError","label","validateTrigger","rules","required","message","type","htmlType","FindSsePage","sseData","setSseData","from","Promise","setTimeout","hardCode","venueName","venueLocation","address","dateOfEvent","descriptions","AddEventDataModal","visible","onCreate","onCancel","okText","cancelText","onOk","validateFields","resetFields","info","initialValues","modifier","CaseData","props","caseID","setVisible","getCase","fetchedCase","eventsData","setEventsData","size","bordered","onClick","marginBottom","scroll","y","pagination","HomeNavigation","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a99cb07.chunk.js","sourcesContent":["import { Layout, Menu, Typography } from \"antd\";\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./home.css\";\n\nconst { Header, Content, Sider, Footer } = Layout;\nconst { Title } = Typography;\n\nconst MyMenu = Menu as any; // Ugly, but will try fixing later. Maybe.\nconst MyLayout = Layout as any;\ninterface HomeProps {\n    children: React.ReactNode;\n}\n\nexport const Home: React.FC<HomeProps> = ({ children }) => {\n    const location = useLocation();\n    const activeNav = location.pathname.split(\"/\")[1] || \"case-records\";\n\n    return (\n        <MyLayout style={{ height: \"100vh\" }}>\n            <Sider>\n                <MyMenu\n                    mode=\"inline\"\n                    theme=\"dark\"\n                    selectedKeys={[activeNav]}\n                >\n                    <div\n                        style={{\n                            textAlign: \"center\",\n                            margin: \"16px\",\n                            height: \"32px\"\n                        }}\n                    >\n                        <Title level={3} style={{ color: \"white\" }}>\n                            SSE Finder\n                        </Title>\n                    </div>\n\n                    <MyMenu.Item key=\"case-records\">\n                        <Link to=\"/\">Case Records</Link>\n                    </MyMenu.Item>\n                    <MyMenu.Item key=\"find-sse\">\n                        <Link to=\"/find-sse\">Find SSEs</Link>\n                    </MyMenu.Item>\n                    <MyMenu.Item key=\"add-case\">\n                        <Link to=\"/add-case\">Add Case</Link>\n                    </MyMenu.Item>\n                </MyMenu>\n            </Sider>\n            <MyLayout>\n                <Header\n                    className=\"site-layout-sub-header-background\"\n                    style={{ padding: 0 }}\n                />\n                <Content style={{ margin: \"24px 16px 0\" }}>\n                    <div\n                        className=\"site-layout-background\"\n                        style={{ padding: 24, height: '100%', overflowY: 'auto' }}\n                    >\n                        {children}\n                    </div>\n                </Content>\n                <Footer style={{ textAlign: \"center\" }}></Footer>\n            </MyLayout>\n        </MyLayout>\n    );\n};\n","import { Case } from \"../types/caseTypes_trial\";\nimport { getHostName } from \"./utils\";\n\nexport const getCases = (): Promise<Case[] | null> => {\n    const url = new URL(`http://${getHostName()}/api/cases`);\n    const request = new Request(url.toString());\n    \n    return fetch(request)\n        .then((r) => r.json())\n        .then((r) => r as Case[])\n        .catch((err) => {\n            console.log(err)\n            return null\n        });\n};\n\nexport const getCase = (caseID: String): Promise<Case | null> => {\n    const url = new URL(`http://${getHostName()}/api/cases/${caseID}`);\n    const request = new Request(url.toString());\n    \n    return fetch(request)\n        .then((r) => r.json())\n        .then((r) => r as Case)\n        .catch((err) => {\n            console.log(err)\n            return null\n        });\n};\n\nexport const postCase = (postCase: Case): Promise<Case | null> => {\n    const url = new URL(`http://${getHostName()}/api/cases/`);\n    \n    return fetch(url.toString(), {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postCase),\n    })\n    .then((r) => r.json())\n    .then((r) => r as Case)\n    .catch((err) => {\n        console.log(err.response)\n        return null\n    });\n};\n","export const getHostName = (): string => {\n    return \"localhost:8000\"\n};","import { Input, Table } from \"antd\";\nimport { useHistory } from \"react-router-dom\"\nimport { Case } from \"../types/caseTypes_trial\";\nimport React, { useState, useEffect } from \"react\";\nimport { getCases } from \"../client/requests\"\nconst { Search } = Input\n\nexport const CaseRecordsPage = () => {\n\n    const history = useHistory();\n\n    const [caseData, setCaseData] = useState<any>([{\n        case_number: null,\n        person_name: null,\n        identify_document_number: null,\n        date_of_birth: null,\n        date_of_onset_of_symptoms: null,\n        date_of_confirmation_of_infection_by_testing: null\n    }]);\n\n    useEffect(() => {\n        getCases().then((cases: Case[] | null) => {\n            setCaseData(cases)\n        })\n    }, []);\n\n    const onSearch = (caseNumber: String) => {\n        history.push(`/case-data/${caseNumber}`);\n    }\n\n    const columns = [\n        {\n            title: \"Case Number\",\n            dataIndex: \"case_number\",\n            key: \"case_number\"\n        },\n        {\n            title: \"Person Name\",\n            dataIndex: \"person_name\",\n            key: \"person_name\"\n        },\n        {\n            title: \"Identity Document Number\",\n            dataIndex: \"identify_document_number\",\n            key: \"identify_document_number\"\n        },\n        {\n            title: \"Date Of Birth\",\n            dataIndex: \"date_of_birth\",\n            key: \"date_of_birth\"\n        },\n        {\n            title: \"Date Of Onset\",\n            dataIndex: \"date_of_onset_of_symptoms\",\n            key: \"date_of_onset_of_symptoms\"\n        },\n        {\n            title: \"Date Of Case Confirmed\",\n            dataIndex: \"date_of_confirmation_of_infection_by_testing\",\n            key: \"date_of_confirmation_of_infection_by_testing\"\n        }\n    ];\n\n    return (\n        <div>\n            <Search placeholder=\"Enter case number\"  onSearch={onSearch} />\n            <Table\n                rowKey=\"case_number\"\n                columns={columns}\n                dataSource={caseData}\n            />\n        </div>\n    );\n};\n","import { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { Case } from \"../types/caseTypes_trial\";\nimport { Form, Input, Button, Spin, DatePicker } from \"antd\";\nimport { postCase } from \"../client/requests\"\n\nexport const AddCasePage = () => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [form] = Form.useForm();\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n        const formData = {\n            case_number: null,\n            person_name: values.surname + \", \" + values.otherNames,\n            identify_document_number: values.idNumber,\n            date_of_birth: values.dateOfBirth.format(\"YYYY-MM-DD\"),\n            date_of_onset_of_symptoms: values.dateOfOnset.format(\"YYYY-MM-DD\"),\n            date_of_confirmation_of_infection_by_testing: values.dateOfCaseConfirmed.format(\"YYYY-MM-DD\")\n        };\n        postCase(formData).then((newCase: Case | null) => {\n            console.log(newCase)\n            setLoading(false);\n            if (newCase && newCase.case_number) {\n                history.push(`/case-data/${newCase?.case_number}`);\n            }\n        }).catch((err) => {\n            //Error handling: For example duplicate identify_document_number\n        })\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    return (\n        <div style={{ padding: \"5vh 10vw\" }}>\n            <Form\n                // {...formItemLayout}\n                layout=\"vertical\"\n                form={form}\n                name=\"Add Case\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                scrollToFirstError\n            >\n                <Form.Item\n                    name=\"surname\"\n                    label=\"Surname\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input Person's Surname\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"otherNames\"\n                    label=\"Other Names\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input Person's Other Names\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"idNumber\"\n                    label=\"Identity Document Number\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message:\n                                \"Please input the Person's Identity Document Number\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"dateOfBirth\"\n                    label=\"Date Of Birth\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select Date of Birth\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"dateOfOnset\"\n                    label=\"Date Of Onset\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select Date of Onset\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"dateOfCaseConfirmed\"\n                    label=\"Date Of Case Confirmed\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select Date of Case Confirmed\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item>\n                    {loading ? (\n                        <Spin />\n                    ) : (\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Add Case\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Button, DatePicker, Form, Spin, Table } from \"antd\";\n\nexport const FindSsePage = () => {\n    const [loading, setLoading] = useState(false);\n    const [sseData, setSseData] = useState<any>([]);\n    const [form] = Form.useForm();\n\n    const onFinish = async (values: any) => {\n        setLoading(true);\n        const formData = {\n            to: values.to.format(\"DD-MM-YYYY\"),\n            from: values.from.format(\"DD-MM-YYYY\")\n        };\n\n        await new Promise((r) => setTimeout(r, 1000));\n        // get request to the backend.\n\n        const hardCode = {\n            venueName: 'A',\n            venueLocation: 'B',\n            address: 'C',\n            dateOfEvent: 'D',\n            descriptions: 'E'\n        };\n\n        console.log(formData);\n        setSseData([...sseData, hardCode]);\n        setLoading(false);\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    const columns = [\n        {\n            title: \"Venue Name\",\n            dataIndex: \"venueName\",\n            key: \"venueName\"\n        },\n        {\n            title: \"Venue Location\",\n            dataIndex: \"venueLocation\",\n            key: \"venueLocation\"\n        },\n        {\n            title: \"Address\",\n            dataIndex: \"address\",\n            key: \"address\"\n        },\n        {\n            title: \"Date of Event\",\n            dataIndex: \"dateOfEvent\",\n            key: \"dateOfEvent\"\n        },\n        {\n            title: \"Descriptions\",\n            dataIndex: \"descriptions\",\n            key: \"descriptions\"\n        }\n    ];\n\n    return (\n        <div>\n            <Form\n                layout=\"inline\"\n                form={form}\n                name=\"Date Range\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                scrollToFirstError\n            >\n                <Form.Item\n                    name=\"from\"\n                    label=\"From\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select a start date\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"to\"\n                    label=\"To\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select an end date\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n\n                <Form.Item>\n                    {loading ? (\n                        <Spin />\n                    ) : (\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Find SSEs\n                        </Button>\n                    )}\n                </Form.Item>\n            </Form>\n            <br />\n            <Table\n                columns={columns}\n                dataSource={sseData}\n            />\n        </div>\n    );\n};\n","import { Modal, Form, Input, DatePicker } from \"antd\";\n\ninterface AddEventDataModalProps {\n    visible: boolean;\n    onCreate: (values: Location) => void;\n    onCancel: () => void;\n}\n\nexport const AddEventDataModal = ({\n    visible,\n    onCreate,\n    onCancel\n}: AddEventDataModalProps) => {\n    const [form] = Form.useForm();\n    return (\n        <Modal\n            visible={visible}\n            title=\"Add a new Location\"\n            okText=\"Add\"\n            cancelText=\"Cancel\"\n            onCancel={onCancel}\n            onOk={() => {\n                form.validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        onCreate(values);\n                    })\n                    .catch((info) => {\n                        console.log(\"Validate Failed:\", info);\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: \"public\" }}\n            >\n                <Form.Item\n                    name=\"venueName\"\n                    label=\"Venue Name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the name of the Venue!\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"venueLocation\"\n                    label=\"Venue Location\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the Location of the Venue!\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"address\"\n                    label=\"Address\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input the Venue Address\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                <Form.Item\n                    name=\"dateOfEvent\"\n                    label=\"Date Of Event\"\n                    validateTrigger=\"onBlur\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please select Date of the Event\"\n                        }\n                    ]}\n                >\n                    <DatePicker />\n                </Form.Item>\n                <Form.Item\n                    name=\"descriptions\"\n                    label=\"Descriptions\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input a description of the Event\"\n                        }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n};\n","import { useLocation } from \"react-router-dom\";\nimport { Descriptions, Table, Button } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { Case } from \"../types/caseTypes_trial\";\nimport { AddEventDataModal } from \"./AddEventDataModal\";\nimport { getCase } from \"../client/requests\"\n\nexport const CaseData = (props: any) => {\n    const location = useLocation();\n    const caseID = location.pathname.split(\"/\")[2];\n    // should be loaded with useeffect and set to state.\n    const [visible, setVisible] = useState(false);\n\n    const [caseData, setCaseData] = useState<Case | null>({\n        case_number: null,\n        person_name: null,\n        identify_document_number: null,\n        date_of_birth: null,\n        date_of_onset_of_symptoms: null,\n        date_of_confirmation_of_infection_by_testing: null\n    });\n\n    useEffect(() => {\n        getCase(caseID).then((fetchedCase: Case | null) => {\n            setCaseData(fetchedCase)\n        })\n    }, [caseID]);\n\n    const onCreate = (values: any) => {\n        console.log(\"Received values of form: \", values);\n        const formData = {\n            venueName: values.venueName,\n            venueLocation: values.venueLocation,\n            address: values.address,\n            dateOfEvent: values.dateOfEvent.format(\"DD-MM-YYYY\"),\n            descriptions: values.descriptions\n        };\n\n        // do post request to add data to venue\n        // add data to state\n\n        setEventsData([...eventsData, formData]);\n        setVisible(false);\n    };\n\n    const [eventsData, setEventsData] = useState<any>([]);\n\n    const columns = [\n        {\n            title: \"Venue Name\",\n            dataIndex: \"venueName\",\n            key: \"venueName\"\n        },\n        {\n            title: \"Venue Location\",\n            dataIndex: \"venueLocation\",\n            key: \"venueLocation\"\n        },\n        {\n            title: \"Address\",\n            dataIndex: \"address\",\n            key: \"address\"\n        },\n        {\n            title: \"Date of Event\",\n            dataIndex: \"dateOfEvent\",\n            key: \"dateOfEvent\"\n        },\n        {\n            title: \"Descriptions\",\n            dataIndex: \"descriptions\",\n            key: \"descriptions\"\n        }\n    ];\n\n    const handleAdd = () => {\n        setVisible(true);\n    };\n\n    return (\n        <>\n            <AddEventDataModal\n                visible={visible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setVisible(false);\n                }}\n            />\n            <br/>\n            <Descriptions\n                title=\"Case Details\"\n                layout=\"horizontal\"\n                size=\"small\"\n                bordered\n            >\n                <Descriptions.Item label=\"Case Number\">\n                    {caseData?.case_number}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Person Name\">\n                    {caseData?.person_name}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"ID Document Number\">\n                    {caseData?.identify_document_number}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Date of Birth\">\n                    {caseData?.date_of_birth}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Date of Onset\">\n                    {caseData?.date_of_onset_of_symptoms}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Date of Case Confirmed\">\n                    {caseData?.date_of_confirmation_of_infection_by_testing}\n                </Descriptions.Item>\n            </Descriptions>\n            <br/>\n            <div className=\"ant-descriptions-header\">\n                <div className=\"ant-descriptions-title\">\n                    Social Events attended\n                </div>\n                <Button\n                    onClick={handleAdd}\n                    type=\"primary\"\n                    style={{\n                        marginBottom: 16\n                    }}\n                >\n                    Add Event\n                </Button>\n            </div>\n            <Table\n                columns={columns}\n                dataSource={eventsData}\n                scroll={{ y: \"45vh\" }}\n                pagination={false}\n            />\n        </>\n    );\n};\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./home/Home\";\nimport { CaseRecordsPage } from \"./components/CaseRecordsPage\";\nimport { AddCasePage } from \"./components/AddCasePage\";\nimport { FindSsePage } from \"./components/FindSsePage\";\nimport { CaseData } from \"./components/CaseData\";\n\nconst HomeNavigation = () => {\n    return (\n        <Home>\n            <Switch>\n                <Route exact path=\"/\">\n                    <CaseRecordsPage />\n                </Route>\n                <Route exact path=\"/find-sse\">\n                    <FindSsePage />\n                </Route>\n                <Route exact path=\"/add-case\">\n                    <AddCasePage />\n                </Route>\n                <Route exact path=\"/case-data/:id\">\n                    <CaseData />\n                </Route>\n            </Switch>\n        </Home>\n    );\n};\n\nfunction App() {\n    return (\n        <div className=\"App\" style={{ height: \"100vh\" }}>\n            <Router>\n                <Switch>\n                    <Route path=\"/\">\n                        <HomeNavigation />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}